{"version":3,"file":"static/js/469.cf85c17e.chunk.js","mappings":"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","sources":["components/Api/MovieApi.js","components/FilmList/FilmList.module.jsx","components/FilmList/FilmList.jsx","components/form/Form.module.jsx","components/form/Form.jsx","components/Movies/Movies.jsx"],"sourcesContent":["\nimport axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '718fcbad595f5c46573cbde9cb6c356f';\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(`trending/movie/week?api_key=${API_KEY}`);\n\n  return data.results;\n};\n\nexport const getMovieByQuery = async query => {\n  const { data } = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n  );\n\n  return data.results;\n};\n\nexport const getMovieById = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data;\n};\n\nexport const getCastMovie = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data.cast;\n};\nexport const getReviewsMovie = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data.results;\n};","import styled from '@emotion/styled';\n\nexport const ListFilms = styled.ul`\n  margin-top: 12px;\n`;\nexport const ItemFilms = styled.li`\n  font-weight: 500;\n  font-size: 14px;\n\n  border-radius: 14px;\n\n  :not(:last-child) {\n    margin-bottom: 6px;\n  }\n\n  a:hover,\n  a:focus {\n    background-color: #ffc700;\n    color: #111111;\n  }\n\n  a {\n    display: block;\n    padding: 16px 16px;\n  }\n`;","import { useLocation, Link } from 'react-router-dom';\nimport { ListFilms, ItemFilms } from './FilmList.module';\n\nconst FilmsList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <ListFilms>\n      {movies.map(({ id, original_title }) => (\n        <ItemFilms key={id}>\n          <Link state={{ from: location }} to={`/movies/${id}`}>\n            {original_title}\n          </Link>\n        </ItemFilms>\n      ))}\n    </ListFilms>\n  );\n};\n\nexport default FilmsList;","import styled from '@emotion/styled';\n\nexport const InputSearch = styled.input`\n  font-weight: 500;\n  font-size: 18px;\n  line-height: 27px;\n\n  padding: 15px 16px;\n\n  color: rgba(255, 255, 255, 0.2);\n\n  background: #2b2b2b;\n  border-radius: 10px;\n\n  :active,\n  :focus,\n  :hover {\n    color: white;\n  }\n`;\n\nexport const ButtonSearch = styled.button`\n  font-weight: 500;\n  font-size: 18px;\n  line-height: 27px;\n\n  margin-left: 12px;\n  padding: 15px 16px;\n\n  color: rgba(255, 255, 255, 0.2);\n\n  background: #2b2b2b;\n  border-radius: 10px;\n\n  :not(:disabled):active,\n  :focus,\n  :not(:disabled):hover {\n    color: white;\n  }\n`;","import { useState } from 'react';\nimport { InputSearch, ButtonSearch } from './Form.module';\n\nconst Form = ({ setSearchParams }) => {\n  const [query, setQuery] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    setSearchParams({ query });\n  };\n\n  const handleSearchParams = ({ target: { value } }) => {\n    setQuery(value);\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <InputSearch\n        type=\"text\"\n        placeholder=\"Name movie\"\n        autoFocus\n        value={query}\n        onChange={handleSearchParams}\n      />\n      <ButtonSearch type=\"submit\" disabled={!query}>\n        Search\n      </ButtonSearch>\n    </form>\n  );\n};\n\nexport default Form;","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getMovieByQuery } from '../Api/MovieApi';\n\nimport Form from '../form/Form';\nimport FilmsList from '../FilmList/FilmList';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  useEffect(() => {\n    const currentQuery = searchParams.get('query');\n    if (!currentQuery) return;\n\n    const fetchMovieByQuery = async () => {\n      try {\n        const movieByQuery = await getMovieByQuery(currentQuery);\n        setMovies(movieByQuery);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n    fetchMovieByQuery();\n  }, [searchParams]);\n\n  return (\n    <>\n      <Form setSearchParams={setSearchParams} />\n      {movies.length > 0 && <FilmsList movies={movies} />}\n    </>\n  );\n};\n\nexport default Movies;"],"names":["axios","API_KEY","getTrendingMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$axios$get","data","_context","prev","next","concat","sent","abrupt","results","stop","apply","arguments","getMovieByQuery","_ref2","_callee2","query","_yield$axios$get2","_context2","_x","getMovieById","_ref3","_callee3","movieId","_yield$axios$get3","_context3","_x2","getCastMovie","_ref4","_callee4","_yield$axios$get4","_context4","cast","_x3","getReviewsMovie","_ref5","_callee5","_yield$axios$get5","_context5","_x4","ListFilms","styled","_templateObject","_taggedTemplateLiteral","ItemFilms","_templateObject2","movies","location","useLocation","_jsx","children","map","id","original_title","Link","state","from","to","InputSearch","ButtonSearch","setSearchParams","_useState","useState","_useState2","_slicedToArray","setQuery","_jsxs","onSubmit","e","preventDefault","type","placeholder","autoFocus","value","onChange","target","disabled","setMovies","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","useEffect","currentQuery","get","fetchMovieByQuery","movieByQuery","t0","console","log","_Fragment","Form","length","FilmsList"],"sourceRoot":""}